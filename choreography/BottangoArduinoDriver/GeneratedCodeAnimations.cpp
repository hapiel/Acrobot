// GENERATED CODE. DO NOT CHANGE
// Trigger animations automatically using the configuration in the app, or callbacks in the BottangoArduinoCallbacks.cpp file
// Look at the method "onLateLoop" in the callbacks file for examples

// Animation Index Key:
// 0: staan
// 1: hgt_la_mer


// !!! Do not change the below, unless you know what you are doing.
// !!!
// !!!


#include "GeneratedCodeAnimations.h"
#include "src/CodeCommandStreamDataSource.h"

namespace GeneratedCodeAnimations
{
    // setup
    const char SETUP_DATA_0[] PROGMEM = "rSVPin,12,2400,549,3000,981\nrSVPin,27,550,2400,3000,1968\nrSVPin,25,2400,550,3000,1475\nrSVPin,26,550,2400,3000,1475\n";
    const char *const SETUP_DATAARRAY[] PROGMEM = {SETUP_DATA_0};

    // animation 0, "staan"
    const char ANIM_0_DATA0[] PROGMEM = "\n";
    const char *const ANIM_0_DATAARRAY[] PROGMEM = {ANIM_0_DATA0};
    const char ANIM_0_LOOP[] PROGMEM = "sC,12,20000,84,5729,42,0,6281,-42,0\nsC,27,20000,136,5376,68,0,6281,-68,0\nsC,25,20000,62,3687,31,0,4096,-31,0\nsC,26,20000,62,3687,31,0,4096,-31,0\n";
    const uint16_t ANIM_0_CONFIG[] PROGMEM = {1, 0, 0, 0, 0, 0, 0, 0};

    // animation 1, "hgt_la_mer"
    const char ANIM_1_DATA0[] PROGMEM = "sC,25,0,21033,4096,5256,0,4096,-5256,0\nsC,26,0,21033,4096,5256,0,4096,-5256,0\nsC,12,0,20800,6281,5197,0,6281,-5200,0\nsC,27,0,18333,6281,4581,0,6281,-4581,0\nsC,27,18333,1300,6281,324,0,1532,-324,0\nsC,27,19633,1400,1532,349,0,1532,-349,0\nsC,12,20800,1333,6281,333,0,5729,-333,0\nsC,26,21033,2400,4096,598,0,3687,-598,0\nsC,27,21033,2400,1532,598,0,5376,-598,0\nsC,25,21033,2400,4096,598,0,3687,-598,0\nsC,12,22133,1300,5729,324,0,5729,-324,0\nsC,12,23433,267,5729,66,0,5729,-66,0\nsC,26,23433,267,3687,66,0,3687,-66,0\nsC,25,23433,267,3687,66,0,3687,-66,0\nsC,27,23433,267,5376,66,0,5376,-66,0\nsC,27,23700,1033,5376,257,0,4738,-257,0\nsC,12,23700,1033,5729,257,0,4738,-257,0\nsC,25,23700,1033,3687,257,0,1620,-257,0\nsC,26,23700,1033,3687,257,0,1620,-257,0\nsC,26,24733,11234,1620,2806,0,1620,-2806,0\nsC,25,24733,11234,1620,2806,0,1620,-2806,0\nsC,27,24733,7100,4738,1716,0,4738,-1773,0\nsC,12,24733,7100,4738,1716,0,4738,-1773,0\nsC,12,31833,700,4738,175,0,3124,-175,0\nsC,27,31833,700,4738,175,0,3124,-175,0\nsC,12,32533,434,3124,108,0,3124,-174,0\nsC,27,32533,434,3124,108,0,3124,-174,0\nsC,27,32967,700,3124,175,0,4738,-175,0\nsC,12,32967,700,3124,175,0,4738,-175,0\nsC,12,33667,233,4738,58,0,4738,-58,0\nsC,27,33667,666,4738,166,0,4738,-166,0\nsC,12,33900,633,4738,158,0,3152,-158,0\nsC,27,34333,634,4738,158,0,3152,-158,0\nsC,12,34533,200,3152,50,0,3152,-50,0\nsC,12,34733,434,3152,108,0,4638,-108,0\nsC,27,34967,200,3152,50,0,3152,-50,0\nsC,12,35167,600,4638,148,0,4326,-149,0\nsC,27,35167,333,3152,83,0,4632,-83,0\nsC,27,35500,267,4632,66,0,4326,-66,0\nsC,12,35767,266,4326,66,0,4701,-66,0\nsC,27,35767,266,4326,66,0,4701,-66,0\nsC,25,35967,600,1620,149,0,3992,-224,-531\nsC,26,35967,600,1620,149,0,3992,-150,-356\nsC,27,36033,367,4701,91,0,6346,-91,-332\nsC,12,36033,367,4701,96,0,6346,-141,-510\nsC,12,36400,733,6346,260,944,7893,-179,0\nsC,27,36400,733,6346,183,668,7893,-183,0\nsC,26,36567,233,3992,59,142,3986,-89,101\nsC,25,36567,233,3992,87,207,3986,-58,66\nsC,26,36800,333,3986,122,-139,3006,-82,0\nsC,25,36800,333,3986,83,-95,3689,-83,0\nsC,27,37133,800,7893,200,0,7893,-200,0\nsC,12,37133,800,7893,200,0,7893,-200,0\nsC,25,37133,234,3689,58,0,3006,-58,0\nsC,26,37133,234,3006,58,0,3689,-58,0\nsC,26,37367,200,3689,50,0,3006,-50,0\nsC,25,37367,200,3006,50,0,3689,-50,0\nsC,25,37567,200,3689,50,0,3006,-50,0\nsC,26,37567,200,3006,50,0,3689,-50,0\nsC,25,37767,166,3006,41,0,3689,-41,0\nsC,26,37767,166,3689,41,0,3006,-41,0\nsC,27,37933,934,7893,233,0,6068,-233,0\nsC,12,37933,934,7893,233,0,6068,-233,0\nsC,26,37933,934,3006,233,0,3742,-233,0\nsC,25,37933,934,3689,233,0,3742,-233,0\nsC,25,38867,400,3742,100,0,3742,-99,0\nsC,26,38867,400,3742,100,0,3742,-100,0\nsC,12,38867,1100,6068,275,0,4751,-275,0\nsC,27,38867,1100,6068,275,0,4751,-275,0\nsC,26,39267,700,3742,175,0,1661,-175,0\nsC,25,39267,700,3742,174,0,1661,-174,0\nsC,12,39967,3633,4751,908,0,4751,-908,0\nsC,27,39967,3633,4751,1041,0,4751,-908,0\nsC,25,39967,26800,1661,6495,0,1661,-8872,0\nsC,26,39967,26800,1661,6495,0,1661,-8872,0\nsC,12,43600,2033,4751,620,0,4341,-731,0\nsC,27,43600,2033,4751,508,0,3544,-758,0\nsC,27,45633,1867,3544,590,0,4341,-466,0\nsC,12,45633,1867,4341,538,0,3544,-466,0\nsC,12,47500,1900,3544,474,0,4341,-475,0\nsC,27,47500,1900,4341,474,0,3544,-475,0\nsC,12,49400,1867,4341,466,0,3544,-466,0\nsC,27,49400,1867,3544,466,0,4341,-466,0\nsC,12,51267,2000,3544,500,0,4341,-500,0\nsC,27,51267,2000,4341,500,0,3544,-500,0\nsC,27,53267,1866,3544,466,0,4341,-466,0\nsC,12,53267,1866,4341,466,0,3544,-466,0\nsC,12,55133,1900,3544,475,0,4341,-475,0\nsC,27,55133,1900,4341,475,0,3544,-475,0\nsC,27,57033,1867,3544,466,0,4341,-466,0\nsC,12,57033,1867,4341,466,0,3544,-466,0\nsC,27,58900,1900,4341,475,0,3544,-475,0\nsC,12,58900,1900,3544,475,0,4341,-475,0\nsC,12,60800,1867,4341,466,0,3544,-466,0\nsC,27,60800,1867,3544,466,0,4341,-466,0\nsC,27,62667,1900,4341,475,0,3544,-475,0\nsC,12,62667,1900,3544,475,0,4341,-475,0\nsC,27,64567,1100,3544,275,0,4341,-275,0\nsC,12,64567,1100,4341,275,0,3544,-274,0\nsC,27,65667,1100,4341,275,0,4341,-275,0\nsC,12,65667,1100,3544,323,0,4547,-405,-45\nsC,26,66767,733,1661,247,0,1370,-242,0\nsC,12,66767,733,4547,233,26,763,-254,-20\nsC,25,66767,733,1661,277,0,1370,-183,0\nsC,27,66767,733,4341,220,0,1080,-267,-10\nsC,26,67500,2433,1370,917,0,1370,-608,0\nsC,25,67500,2433,1370,608,0,1370,-608,0\nsC,27,67500,2433,1080,719,26,1080,-608,-22\nsC,12,67500,2433,763,805,63,763,-608,-48\nsC,26,69933,5234,1370,1308,0,1661,-1468,0\nsC,25,69933,5234,1370,1308,0,1661,-1451,0\nsC,12,69933,5234,763,1308,103,4751,-1244,0\nsC,27,69933,5234,1080,1308,47,4751,-1243,0\nsC,26,75167,2566,1661,641,0,1661,-641,0\nsC,25,75167,2566,1661,641,0,1661,-641,0\nsC,27,75167,2566,4751,641,0,4751,-641,0\nsC,12,75167,2233,4751,558,0,1658,-558,0\nsC,12,77400,333,1658,83,0,1658,-83,0\nsC,12,77733,3867,1658,998,0,1658,-966,0\nsC,26,77733,1567,1661,391,0,3652,-391,0\nsC,27,77733,1567,4751,391,0,6966,-391,0\nsC,25,77733,1567,1661,391,0,4452,-391,0\nsC,25,79300,833,4452,208,0,3304,-208,0\nsC,26,79300,833,3652,208,0,4741,-208,0\nsC,27,79300,3533,6966,881,0,6966,-881,0\nsC,25,80133,934,3304,233,0,4741,-233,0\nsC,26,80133,934,4741,233,0,3304,-233,0\nsC,25,81067,766,4741,191,0,3304,-158,0\nsC,26,81067,766,3304,214,0,4741,-158,0\nsC,12,81600,1233,1658,307,0,6966,-274,0\nsC,26,81833,634,4741,158,0,4053,-40,0\nsC,25,81833,634,3304,158,0,4053,-40,0\nsC,25,82467,166,4053,41,0,4053,-60,-1\nsC,26,82467,166,4053,41,0,4053,-59,-1\nsC,26,82633,2100,4053,602,6,4096,-499,0\nsC,25,82633,2100,4053,599,6,4096,-514,0\nsC,27,82833,700,6966,175,0,6966,-175,0\nsC,12,82833,700,6966,175,0,6966,-175,0\nsC,12,83533,434,6966,108,0,7697,-108,0\nsC,27,83533,434,6966,108,0,7697,-108,0\nsC,12,83967,433,7697,107,0,6441,-107,0\nsC,27,83967,433,7697,108,0,6441,-108,0\nsC,12,84400,333,6441,82,0,6441,-82,0\nsC,27,84400,333,6441,82,0,6441,-82,0\nsC,27,84733,467,6441,116,0,5216,-133,416\nsC,25,84733,467,4096,116,0,2080,-100,449\nsC,26,84733,467,4096,116,0,2080,-100,449\nsC,12,84733,467,6441,116,0,5216,-133,416\nsC,26,85200,767,2080,178,-799,371,-191,202\nsC,12,85200,767,5216,183,-576,3022,-185,549\nsC,25,85200,767,2080,178,-799,371,-200,211\nsC,27,85200,767,5216,183,-576,3022,-185,549\nsC,27,85967,633,3022,166,-496,958,-166,387\nsC,25,85967,500,371,122,-129,135,-124,0\nsC,12,85967,633,3022,166,-496,958,-166,387\nsC,26,85967,500,371,125,-132,135,-125,0\nsC,25,86467,400,135,100,0,1214,-100,-394\nsC,26,86467,400,135,100,0,1214,-100,-394\nsC,27,86600,333,958,76,-180,617,-83,0\nsC,12,86600,333,958,76,-180,617,-83,0\nsC,26,86867,533,1214,133,525,4116,-133,0\nsC,25,86867,533,1214,105,414,4116,-132,0\nsC,12,86933,467,617,115,0,1262,-115,0\nsC,27,86933,467,617,116,0,1262,-116,0\nsC,27,87400,1400,1262,349,0,1352,-348,0\nsC,12,87400,1400,1262,348,0,1352,-348,0\nsC,25,87400,1400,4116,348,0,1650,-349,0\nsC,26,87400,1400,4116,349,0,6490,-349,0\nsC,26,88800,1500,6490,375,0,6490,-375,0\nsC,25,88800,1500,1650,375,0,1650,-375,0\nsC,27,88800,1500,1352,375,0,6154,-375,0\nsC,12,88800,1500,1352,375,0,1352,-375,0\nsC,12,90300,1000,1352,250,0,1352,-250,0\nsC,26,90300,1000,6490,250,0,6490,-250,0\nsC,25,90300,1000,1650,250,0,1650,-250,0\nsC,27,90300,1000,6154,250,0,6154,-250,0\nsC,25,91300,1000,1650,250,0,1650,-250,0\nsC,27,91300,1000,6154,250,0,6154,-250,0\nsC,12,91300,1000,1352,250,0,416,-250,0\nsC,26,91300,1000,6490,250,0,313,-242,0\nsC,27,92300,967,6154,241,0,5070,-241,0\nsC,12,92300,967,416,241,0,5022,-241,0\nsC,26,92300,967,313,241,0,4096,-241,0\nsC,25,92300,967,1650,241,0,4096,-241,0\nsC,12,93267,900,5022,225,0,5022,-225,0\nsC,26,93267,900,4096,225,0,4096,-225,0\nsC,27,93267,900,5070,225,0,5070,-225,0\nsC,25,93267,900,4096,225,0,4096,-225,0\nsC,25,94167,2300,4096,575,0,4096,-575,0\nsC,12,94167,800,5022,199,0,1068,-199,0\nsC,26,94167,2300,4096,575,0,4096,-575,0\nsC,27,94167,800,5070,199,0,1099,-199,0\nsC,27,94967,533,1099,132,0,1099,-133,0\nsC,12,94967,533,1068,132,0,1068,-133,0\nsC,12,95500,433,1068,108,0,2611,-163,0\nsC,27,95500,433,1099,107,0,2611,-108,0\nsC,27,95933,367,2611,91,0,1099,-91,0\nsC,12,95933,367,2611,137,0,1068,-91,0\nsC,27,96300,167,1099,41,0,1099,-41,0\nsC,12,96300,167,1068,41,0,1068,-41,0\nsC,12,96467,700,1068,175,0,0,-175,0\nsC,26,96467,700,4096,175,0,2076,-175,0\nsC,27,96467,700,1099,175,0,0,-175,0\nsC,25,96467,700,4096,175,0,2076,-175,0\nsC,25,97167,1800,2076,450,0,2076,-450,0\nsC,27,97167,933,0,233,0,0,-233,0\nsC,26,97167,1800,2076,450,0,2076,-450,0\nsC,12,97167,933,0,233,0,0,-233,0\nsC,27,98100,2033,0,507,0,6281,-507,0\nsC,12,98100,2033,0,507,0,6281,-507,0\nsC,25,98967,933,2076,233,0,4139,-233,0\nsC,26,98967,933,2076,233,0,4139,-233,0\nsC,25,99900,20167,4139,5041,0,4139,-5041,0\nsC,26,99900,20167,4139,5041,0,4139,-5041,0\nsC,12,100133,767,6281,191,0,5848,-191,0\nsC,27,100133,767,6281,191,0,6866,-191,0\nsC,12,100900,967,5848,241,0,6866,-241,0\nsC,27,100900,967,6866,241,0,5848,-241,0\nsC,12,101867,933,6866,233,0,5848,-232,0\nsC,27,101867,933,5848,233,0,6866,-232,0\nsC,12,102800,900,5848,225,0,6866,-225,0\nsC,27,102800,900,6866,225,0,5848,-225,0\nsC,12,103700,933,6866,233,0,5848,-233,0\nsC,27,103700,933,5848,233,0,6866,-233,0\nsC,12,104633,900,5848,225,0,6866,-225,0\nsC,27,104633,900,6866,225,0,5848,-225,0\nsC,12,105533,934,6866,233,0,5848,-233,0\nsC,27,105533,934,5848,233,0,6866,-233,0\nsC,12,106467,900,5848,225,0,6866,-225,0\nsC,27,106467,900,6866,225,0,5848,-225,0\nsC,27,107367,1866,5848,466,0,6326,-466,0\nsC,12,107367,1866,6866,466,0,6326,-466,0\nsC,12,109233,3167,6326,791,0,6326,-791,0\nsC,27,109233,3167,6326,791,0,6326,-791,0\nsC,12,112400,4300,6326,1075,0,1199,-1075,0\nsC,27,112400,4300,6326,1075,0,1199,-1075,0\nsC,27,116700,1700,1199,425,0,1199,-425,0\nsC,12,116700,1700,1199,425,0,1199,-425,0\nsC,27,118400,1400,1199,350,0,5495,-350,0\nsC,12,118400,1400,1199,350,0,5495,-350,0\nsC,27,119800,6567,5495,1641,0,5495,-1641,0\nsC,12,119800,6567,5495,1641,0,5495,-1641,0\nsC,26,120067,1233,4139,308,0,2505,-308,0\nsC,25,120067,1233,4139,308,0,2505,-308,0\nsC,12,126367,1566,5495,391,0,1103,-391,0\nsC,27,126367,1566,5495,391,0,1103,-391,0\n\n";
    const char *const ANIM_1_DATAARRAY[] PROGMEM = {ANIM_1_DATA0};
    const char ANIM_1_LOOP[] PROGMEM = "sC,27,140000,136,5376,68,0,6281,-68,0\nsC,12,140000,84,5729,42,0,6281,-42,0\nsC,26,140000,62,3687,31,0,4096,-31,0\nsC,25,140000,62,3687,31,0,4096,-31,0\n";
    const uint16_t ANIM_1_CONFIG[] PROGMEM = {0, 0, 0, 22, 0, 0, 0, 0};


    // configs
    const uint16_t *const CONFIGS_ARRAY[] PROGMEM = {ANIM_0_CONFIG, ANIM_1_CONFIG};

    CommandStream *GenerateSetupCommandStream()
    {
        return new CommandStream(new CodeCommandStreamDataSource(SETUP_DATAARRAY, 1));
    }

    CommandStream *GenerateCommandStreamByIndex(byte animationIndex)
    {
        switch (animationIndex)
        {
        case 0:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_0_DATAARRAY, 1, ANIM_0_LOOP));
        case 1:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_1_DATAARRAY, 1, ANIM_1_LOOP));

        }
        return nullptr;
    }

    byte getAnimationCount()
    {
        return 2;
    }

    const uint16_t *getConfigValues(uint8_t animationIndex)
    {
        // AVR Needs to move it to sram    
#if defined(ARDUINO_ARCH_AVR)
#define CONFIG_SIZE 8

        static uint16_t copy[CONFIG_SIZE];
        const uint16_t *flashPtr =
            (const uint16_t *)pgm_read_word_near(&CONFIGS_ARRAY[animationIndex]);

        for (uint8_t i = 0; i < CONFIG_SIZE; i++)
        {
            copy[i] = pgm_read_word_near(&flashPtr[i]);
        }
        return copy;
#else
        // Everything else can use normal accessing
        return CONFIGS_ARRAY[animationIndex];
#endif
    }
}
