  void drawMenuNoClear()
  {
    uint8_t top = lcdMenuWrapper.getTop();
    uint8_t bottom = lcdMenuWrapper.getBottom();
    MenuItem** currentMenuTable = lcdMenuWrapper.getCurrentMenuTable();
    uint8_t maxRows = lcdMenuWrapper.getMaxRows();
    
    for (uint8_t i = top; i <= bottom; i++)
    {
      MenuItem *item = currentMenuTable[i];
      lcd->setCursor(1, map(i, top, bottom, 0, maxRows - 1));
      if (currentMenuTable[i]->getType() != MENU_ITEM_END_OF_MENU)
      {
        lcd->print(item->getText());
      }
      //
      // determine the type of item
      //
      switch (item->getType())
      {
#ifdef ItemToggle_H
      case MENU_ITEM_TOGGLE:
        //
        // append textOn or textOff depending on the state
        //
        lcd->print(":");
        lcd->print(item->isOn() ? item->getTextOn()
                                : item->getTextOff());
        break;
#endif
#if defined(ItemProgress_H) || defined(ItemInput_H)
      case MENU_ITEM_INPUT:
      case MENU_ITEM_PROGRESS:
        //
        // append the value of the input
        //
        static char *buf = new char[maxCols];
        substring(item->getValue(), 0,
                  maxCols - strlen(item->getText()) - 2, buf);
        lcd->print(":");
        lcd->print(buf);
        break;
#endif
#ifdef ItemList_H
      case MENU_ITEM_LIST:
        //
        // append the value of the item at current list position
        //
        lcd->print(":");
        lcd->print(item->getItems()[item->getItemIndex()].substring(
            0, maxCols - strlen(item->getText()) - 2));
        break;
#endif
      default:
        break;
      }
      // if we reached the end of menu, stop
      if (currentMenuTable[i]->getType() == MENU_ITEM_END_OF_MENU)
        break;
    }
  }